apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/openshift/multiarch-tuning-operator?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "push" && target_branch
      == "main" && ("bundle/***".pathChanged() || ".tekton/***".pathChanged() || "bundle.konflux.Dockerfile".pathChanged()
      || "trigger-konflux-builds.txt".pathChanged() )
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: multiarch-tuning-operator
    appstudio.openshift.io/component: multiarch-tuning-operator-bundle
    pipelines.appstudio.openshift.io/type: build
  name: multiarch-tuning-operator-bundle-on-push
  namespace: multiarch-tuning-ope-tenant
spec:
  params:
  - name: artifact-type
    value: operatorbundle
  - name: dockerfile
    value: bundle.konflux.Dockerfile
  - name: git-url
    value: '{{source_url}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/multiarch-tuning-ope-tenant/multiarch-tuning-operator/multiarch-tuning-operator-bundle:{{revision}}
  - name: path-context
    value: .
  - name: revision
    value: '{{revision}}'
  - name: build-platforms
    value:
    - linux/amd64
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: '{"packages": [{"type": "gomod"}], "flags": ["gomod-vendor-check"]}'
  - name: build-source-image
    value: "true"
  pipelineRef:
    params:
    - name: name
      value: docker-build-oci-ta
    - name: bundle
      value: quay.io/konflux-ci/tekton-catalog/pipeline-docker-build-oci-ta:devel@sha256:fd62e9cb3d7e429bf7c1849dc03b9d9a4c2903a9eb0a8abf5dab6a69651029d3
    - name: kind
      value: pipeline
    resolver: bundles
  taskRunTemplate:
    serviceAccountName: build-pipeline-multiarch-tuning-operator-bundle
  workspaces:
  - name: workspace
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
